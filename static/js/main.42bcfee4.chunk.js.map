{"version":3,"sources":["components/choice-container/choice-item/choice-item.jsx","requests/tinder.js","requests/inventory.js","actions/results.js","reducers/choiceItems.js","constants/keys.js","constants/actions.js","components/choice-container/choice-container.jsx","actions/tags.js","actions/status.js","components/make-model-card/make-model-card.jsx","components/result-container/result-container.jsx","components/main-container/main-container.jsx","App.js","serviceWorker.js","reducers/tags.js","reducers/results.js","reducers/status.js","reducers/index.js","store/store.js","index.js"],"names":["ChoiceItem","_ref","img","status","animationEnd","visible","react_default","a","createElement","className","classNames","choice-item--visible","onAnimationEnd","concat","src","alt","getRecommendations","tags","requestConfig","method","headers","Content-Type","credentials","body","JSON","stringify","fetch","then","response","dataPromise","json","Promise","reject","findInventories","make","model","url","console","log","n","RIGHT","LEFT","initialState","sort","Math","random","slice","choiceItems","state","arguments","length","undefined","action","type","map","item","Object","objectSpread","filter","ChoiceContainerUi","currentItem","_this","props","itemsList","handleKey","e","prevItem","keyCode","nonprocessed","setState","dislike","loadResult","like","handleLike","handleDislike","focusContainer","component","focus","handleAnimationEnd","process","_this2","this","curIndex","ref","tabIndex","onKeyDown","toConsumableArray","reverse","index","choice_item_ChoiceItem","key","Button","color","onClick","version","xmlns","width","height","viewBox","fill","d","React","Component","ChoiceContainer","connect","dispatch","tag","startFetching","asyncToGenerator","regenerator_default","mark","_callee2","getState","recommendations","result","wrap","_context2","prev","next","selectedTags","sent","all","_ref2","_callee","makeModel","inventories","_context","abrupt","stop","_x3","apply","data","_x","_x2","MakeModelCard","findInvPhoto","find","inv","vehicleInfo","photo","defaultPhoto","large","renderInventory","title","styleInfo","year","trim","vin","href","target","Card","style","backgroundImage","CardBody","CardTitle","CardSubtitle","prices","baseMsrp","toLocaleString","currency","convertUrlParam","param","toLowerCase","replace","_this$props$makeModel","results","inventory","ResultContainerUI","window","location","reload","make_model_card_make_model_card","MainContainerUI","renderInitialBanner","Jumbotron","size","start","react","result_container_result_container","App","store","es","main_container_main_container","Boolean","hostname","match","reducers_tags","tagsInfo","forEach","tagValues","defineProperty","reducers_status","makeRootReducers","asyncReducers","combineReducers","statusReducer","tagsReducer","choiceItemsReducer","resultsReducer","store_store","initState","middleware","thunk","composeEnhancers","compose","createStore","makeRootReducer","applyMiddleware","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42bcfee4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './choice-item.css';\n\nexport const ChoiceItem = ({img, status, animationEnd, visible}) => (\n  <div \n    className = {classNames(\n      'choice-item',\n      { 'choice-item--visible': visible }\n    )}>\n    <img\n      onAnimationEnd={() => animationEnd(img)}\n      className = {classNames(\n        'choice-item__image',\n        `choice-item__image--${status}`\n      )}\n      src={`images/sm/${img}`}\n      alt={img}\n    />\n  </div>\n);","import 'isomorphic-fetch';\n\nexport function getRecommendations(tags) {\n    const url = 'https://amishin.pythonanywhere.com/api/v1/model/predict';\n    const requestConfig = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      credentials: 'omit',\n      body: JSON.stringify(tags)\n    };\n    return fetch(url, requestConfig).then(response => {\n        const dataPromise = response.json();\n        if (response.status === 200) return dataPromise;\n        return Promise.reject('Server error');\n    });\n  }","import 'isomorphic-fetch';\n\n// const zipCode = 44241;\n// const radius = 500;\n// const pagesize = 3;\n\nexport function findInventories(make, model) {\n    // const url = `https://www.edmunds.com/api/inventory/v5/find?zip=${zipCode}&sortby=_geo&radius=${radius}&pagenum=1&pagesize=${pagesize}&vehicleInfo.styleInfo.make=${make}&vehicleInfo.styleInfo.model=${model}&fields=vin,type,vehicleInfo,prices`;\n    const url = `https://amishin.pythonanywhere.com/api/v1/mocks/mm?make=${make}&model=${model}`;\n    const requestConfig = {\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'},\n      credentials: 'omit',\n    };\n    return fetch(url, requestConfig).then(response => {\n        const dataPromise = response.json();\n        if (response.status === 200) return dataPromise;\n        console.log(url);\n        return Promise.reject('Server error');\n    });\n  }","import { SET_RESULT } from '../constants/actions';\nimport { setLoadingStatus, setFinishedStatus, startFetching } from './status';\nimport { getRecommendations } from '../requests/tinder';\nimport { findInventories } from '../requests/inventory';\n\nexport const setResultData = (data) => ({ type: SET_RESULT, data });\n\nexport const loadResult = () => async (dispatch, getState) => {\n    const state = getState();\n    dispatch(startFetching());\n    const recommendations = await getRecommendations(state.selectedTags);\n    const result = await Promise.all(recommendations.map(async (makeModel) => {\n      const inventories = await findInventories(makeModel.make, makeModel.model);\n      return {\n        make: makeModel.make,\n        model: makeModel.model,\n        inventories,\n      };\n    }));\n    dispatch(setResultData(result));\n    dispatch(setFinishedStatus());\n  };\n","import { LIKE, DISLIKE, PROCESS } from '../constants/actions';\n\nexport const imagesCount = 10;\n\nconst getRandomImages = (n) => {\n  const array = [\n    { img: \"birds.jpg\", tags: [\"birds\", \"family\"] },\n    { img: \"cats.jpg\", tags: [\"cats\"] },\n    { img: \"coffee.jpg\", tags: [\"restaurants\", \"beer\"] },\n    { img: \"cycling.jpg\", tags: [\"sport\", \"sporty\", \"nature\"]},\n    { img: \"dogs.jpg\", tags: [\"dogs\"] },\n    { img: \"family.jpg\", tags: [\"family\", \"nature\"] },\n    { img: \"fastfood.jpg\", tags: [\"fastfood\", \"cola\"] },\n    { img: \"fitness.jpg\", tags: [\"sport\", \"sporty\"] },\n    { img: \"healthfood.jpg\", tags: [\"homefood\", \"restaurants\"] },\n    { img: \"listenmusic.jpg\", tags: [\"pop\", \"casual\"] },\n    { img: \"pizza.jpg\", tags: [\"fastfood\"] },\n    { img: \"plants.jpg\", tags: [\"nature\"] },\n    { img: \"reading.jpg\", tags: [\"reading\", \"casual\"] },\n    { img: \"running.jpg\", tags: [\"sport\", \"sporty\", \"running\"] },\n    { img: \"seafood.jpg\", tags: [\"restaurants\", \"travel\"] },\n    { img: \"serfing.jpg\", tags: [\"travel\", \"sporty\"] },\n    { img: \"snowboarding.jpg\", tags: [\"sport\", \"sporty\", \"nature\"] },\n    { img: \"swimming.jpg\", tags: [\"swimming\", \"adventure\"] },\n    { img: \"travel.jpg\", tags: [\"travel\" ]},\n    { img: \"walking.jpg\", tags: [\"nature\", \"family\", \"mountains\"] },\n    { img: \"winter.jpg\", tags: [\"mountains\", \"nature\"] }\n  ];\n  const s = array.sort(() => 0.5 - Math.random());\n  return s.slice(0, n);\n};\n\nconst initialState = getRandomImages(imagesCount);\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case LIKE:\n      return state.map(item => ({\n        ...item,\n        status: action.item === item.img ? 'like' : item.status,\n      }));\n    case DISLIKE:\n      return state.map(item => ({\n        ...item,\n        status: action.item === item.img ? 'dislike' : item.status,\n      }));\n    case PROCESS:\n      return state.filter(item => action.item !== item.img);\n    default: \n      return state;\n  }\n}","export const RIGHT = 39;\nexport const LEFT = 37;","export const LIKE = 'LIKE';\nexport const DISLIKE = 'DISLIKE';\nexport const PROCESS = 'PROCESS';\n\nexport const START_FETCHING = 'START_FETCHING';\nexport const LOADING = 'LOADING';\nexport const FINISHED = 'FINISHED';\nexport const IN_PROGRESS = 'IN_PROGRESS';\n\nexport const SET_RESULT = 'SET_RESULT';","import React from 'react';\nimport { ChoiceItem } from './choice-item';\nimport { connect } from 'react-redux';\nimport { like, dislike, process } from '../../actions/tags';\nimport { startFetching } from '../../actions/status';\nimport { loadResult } from '../../actions/results';\nimport { LEFT, RIGHT } from '../../constants/keys';\nimport { Button } from 'reactstrap';\n\nimport { imagesCount } from '../../reducers/choiceItems';\n\nimport './choice-container.css';\n\nconst mapStateToProps = state => ({\n  itemsList: state.choiceItems,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  like: (tag, item) => dispatch(like(tag, item)),\n  dislike: (tag, item) => dispatch(dislike(tag, item)),\n  process: (item) => dispatch(process(item)),\n  startFetching: () => dispatch(startFetching()),\n  loadResult: () => dispatch(loadResult())\n});\nclass ChoiceContainerUi extends React.Component {\n  state = {\n    currentItem: this.props.itemsList[0],\n  };\n\n  handleKey = (e) => {\n    const prevItem = { ...this.state.currentItem };\n\n    \n    \n    if (e.keyCode === LEFT) {\n      const nonprocessed = this.props.itemsList.filter(item => !item.status);\n    nonprocessed.length > 1 && this.setState({ currentItem: nonprocessed[1] });\n      this.props.dislike(prevItem.tags, prevItem.img);\n      if (nonprocessed.length === 1) {\n        this.props.loadResult();\n        return;\n      }\n    } else if (e.keyCode === RIGHT) {\n      const nonprocessed = this.props.itemsList.filter(item => !item.status);\n    nonprocessed.length > 1 && this.setState({ currentItem: nonprocessed[1] });\n      this.props.like(prevItem.tags, prevItem.img);\n      if (nonprocessed.length === 1) {\n        this.props.loadResult();\n        return;\n      }\n    }\n    \n    // this.setState({ currentItem: this.state.currentItem + 1 });\n  };\n\n  handleLike = () => {\n    const prevItem = { ...this.state.currentItem };\n\n    const nonprocessed = this.props.itemsList.filter(item => !item.status);\n    nonprocessed.length > 1 && this.setState({ currentItem: nonprocessed[1] });\n\n    this.props.like(prevItem.tags, prevItem.img);\n    if (nonprocessed.length === 1) {\n      this.props.loadResult();\n      return;\n    }\n    // this.setState({ currentItem: this.state.currentItem + 1 });\n  }\n\n  handleDislike = () => {\n    const prevItem = { ...this.state.currentItem };\n\n    const nonprocessed = this.props.itemsList.filter(item => !item.status);\n    nonprocessed.length > 1 && this.setState({ currentItem: nonprocessed[1] });\n\n    this.props.dislike(prevItem.tags, prevItem.img);\n    if (nonprocessed.length === 1) {\n      this.props.loadResult();\n      return;\n    }\n  }\n\n  focusContainer = (component) => {\n    if (component) {\n      component.focus();\n    }\n  };\n\n  handleAnimationEnd = (item) => {\n    this.props.process(item);\n  };\n\n  render () {\n    // const curItem = this.props.itemsList.find(item => item.img === this.state.currentItem.img);\n    // const curIndex = this.props.itemsList.indexOf(curItem);\n    const nonprocessed = this.props.itemsList.filter(item => !item.status);\n    const curIndex = imagesCount - nonprocessed.length + 1;\n    return (<div\n        className=\"choice-container\"\n        ref={this.focusContainer}\n        tabIndex=\"0\"\n        onKeyDown={this.handleKey}\n      >\n      <h3 className=\"m-2\">Do you like this?</h3>\n      <h6 className=\"m-2\">{curIndex} from {imagesCount}</h6>\n      <div className=\"choice-items\">\n        { this.props.itemsList && [...this.props.itemsList].reverse().map((item, index) => (\n          <ChoiceItem\n            animationEnd={this.handleAnimationEnd}\n            key={item.img}\n            img={item.img}\n            status={item.status}\n            visible={(this.state.currentItem && item.img === this.state.currentItem.img) || item.status}\n          >\n          </ChoiceItem>\n        ))}\n      </div>\n      {/* <ChoiceItem\n        img={this.props.itemsList[this.state.currentItem].img}\n      >\n      </ChoiceItem> */}\n      <div className=\"buttons\">\n        <Button color=\"danger\" onClick={this.handleDislike} className=\"dislike\">\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\">\n          <title>dislike</title>\n          <path fill=\"#fff\" d=\"M3 14c-2.281 0-1-6 1-6-1 0 0-5 2-5 0-2 2-3 4-3 8.448 0 5.477 2.114 14 3v16c-7.529 2.258-15 7.919-15 13-1.656 0-6-2 0-12 0 0-5 0-6 0-3 0-2-6 0-6zM26 19v-16h-2v-1h4c1.1 0 2 1.35 2 3v12c0 1.65-0.9 3-2 3h-4v-1h2z\"></path>\n          </svg>\n          Dislike\n        </Button>\n        <Button color=\"danger\" onClick={this.handleLike} className=\"like\">\n          Like\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\">\n          <title>like</title>\n          <path fill=\"#fff\" d=\"M29 18c2.281 0 1 6-1 6 1 0 0 5-2 5 0 2-2 3-4 3-8.448 0-5.477-2.114-14-3v-16c7.529-2.258 15-7.92 15-13 1.656 0 6 2 0 12 0 0 5 0 6 0 3 0 2 6 0 6zM6 13v16h2v1h-4c-1.1 0-2-1.35-2-3v-12c0-1.65 0.9-3 2-3h4v1h-2z\"></path>\n          </svg>\n        </Button>\n      </div>\n    </div>);\n  };\n};\n\nexport const ChoiceContainer = connect(mapStateToProps, mapDispatchToProps)(ChoiceContainerUi);","import { LIKE, DISLIKE, PROCESS } from '../constants/actions';\n\nexport const like = (tags, item) => ({ type: LIKE, tags, item });\n\nexport const dislike = (tags, item) => ({ type: DISLIKE, tags, item });\n\nexport const process = (item) => ({ type: PROCESS, item });","import { START_FETCHING, LOADING, FINISHED, IN_PROGRESS } from '../constants/actions';\n\nexport const start = () => ({ type: IN_PROGRESS });\n\nexport const startFetching = () => ({ type: START_FETCHING });\n\nexport const setLoadingStatus = () => ({ type: LOADING });\n\nexport const setFinishedStatus = () => ({ type: FINISHED });","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nimport './make-model-card.css';\n\nclass MakeModelCard extends Component {\n\n  findInvPhoto = (inventories) => {\n    return inventories.find(inv => inv.vehicleInfo.photo.defaultPhoto && inv.vehicleInfo.photo.defaultPhoto.large.url).vehicleInfo.photo.defaultPhoto.large.url;\n  }\n\n  renderInventory = (inv, inventories) => {\n    const src = inv.vehicleInfo.photo.defaultPhoto\n      ? inv.vehicleInfo.photo.defaultPhoto.large.url\n      : this.findInvPhoto(inventories);\n      // : 'https://static.ed.edmunds-media.com/unversioned/img/e17/no-vehicle-image.png';\n    const title = `${inv.vehicleInfo.styleInfo.year} ${inv.vehicleInfo.styleInfo.trim}`;\n    return (\n      <div key={inv.vin} className=\"inventory-item m-1\">\n        <a\n          href={`https://www.edmunds.com/${inv.vehicleInfo.styleInfo.make}/${inv.vehicleInfo.styleInfo.model}/${inv.vehicleInfo.styleInfo.year}/vin/${inv.vin}/`}\n          target=\"_blanc\"\n        >\n          <Card className=\"h-100\">\n            <div \n              className=\"card_image\"\n              style={{ backgroundImage: `url(${src})` }}\n            >\n            </div>\n            {/* <CardImg top width=\"100%\" src={src} alt=\"\" /> */}\n            {<CardBody>\n              <CardTitle>{title}</CardTitle>\n              <CardSubtitle>Base MSRP: {inv.prices.baseMsrp.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</CardSubtitle>\n            </CardBody> }\n          </Card>\n        </a>\n      </div>\n    )\n  }\n\n  convertUrlParam = (param) => param.toLowerCase().replace(' ', '-');\n\n  render () {\n    const { make, model, inventories} = this.props.makeModel;\n    const title = `${make} ${model}`;\n    return (\n      <div\n          className=\"make-model-card\"\n        >\n        <div className=\"card_header m-3\">\n          <a className=\"d-block h5 mb-0\" href={`https://www.edmunds.com/${this.convertUrlParam(make)}/${this.convertUrlParam(model)}/`} target=\"_blanc\">\n            {title}\n          </a>\n        </div>\n        <div className=\"inventories justify-content-around\">\n          {inventories.results.map(inventory => this.renderInventory(inventory, inventories.results))}\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default MakeModelCard;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport MakeModelCard from '../make-model-card/make-model-card';\n\nimport './result-container.css';\n\nconst mapStateToProps = state => ({\n  results: state.results\n})\n\nclass ResultContainerUI extends Component {\n  render () {\n    return (\n      <div>\n        <div className=\"reload-link\">\n          <h3>People with the same preferences choose next cars</h3>\n          <a className=\"d-block h5 mb-0\" href=\"\" onClick={() => window.location.reload()}>\n            Try again\n          </a>\n        </div>\n        <div className=\"d-flex flex-wrap justify-content-around\">\n          {this.props.results.map(item => \n            <MakeModelCard key={`${item.make}-${item.model}`} makeModel={item}>\n            </MakeModelCard>)\n          }\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default connect(mapStateToProps)(ResultContainerUI);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { ChoiceContainer }  from '../choice-container';\nimport ResultContainer  from '../result-container/result-container';\nimport { Spinner, Button, Jumbotron } from 'reactstrap';\n\nimport { start } from '../../actions/status';\nimport { Fade } from 'reactstrap';\n\nimport './main-container.css';\n\nconst mapStateToProps = state => ({\n  status: state.status\n})\n\nconst mapDispatchToProps = dispatch => ({\n  start: () => dispatch(start()),\n});\n\nclass MainContainerUI extends Component {\n  renderInitialBanner = () => {\n    return (\n      <div className=\"start-container\">\n        <Jumbotron>\n          <h1>Tell us what you like to find your perfect car</h1>\n          <p>\n            <Button color=\"danger\"  size=\"lg\" onClick={this.props.start} className=\"m-3 pr-5 pl-5\">\n              Start\n            </Button>\n          </p>\n        </Jumbotron>\n      </div>\n    )\n  }\n\n  render () {\n    return (<Fragment>\n      {this.props.status === 'initial'\n        ? this.renderInitialBanner()\n        : this.props.status === 'in_progress'\n        ? <ChoiceContainer></ChoiceContainer>\n        : this.props.status === 'fetching'\n          ? <img className=\"gif-loader mt-5\" src=\"images/spinner.gif\"/>\n          // <Spinner className=\"mt-5\" color=\"primary\" />\n          : <ResultContainer></ResultContainer>\n      }\n    </Fragment>);\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainerUI);","import React, { Component } from 'react';\nimport { Provider } from'react-redux';\n\nimport MainContainer from './components/main-container/main-container';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const { store } = this.props;\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <MainContainer></MainContainer>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LIKE, DISLIKE } from '../constants/actions';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case LIKE: {\n      let tagsInfo = {};\n      action.tags.forEach(tag => {\n        const tagValues = state[tag] || [];\n        tagsInfo = {\n          ...tagsInfo,\n          [tag]: [...tagValues, 1]\n        };\n      });\n      \n      return {\n        ...state,\n        ...tagsInfo\n      };\n    }\n    case DISLIKE: {\n      let tagsInfo = {};\n      action.tags.forEach(tag => {\n        const tagValues = state[tag] || [];\n        tagsInfo = {\n          ...tagsInfo,\n          [tag]: [...tagValues, 0]\n        };\n      });\n      \n      return {\n        ...state,\n        ...tagsInfo\n      };\n    }\n    default: \n      return state;\n  }\n}","import { SET_RESULT } from '../constants/actions';\n\nexport default (state = {}, action) => {\n  switch(action.type) {\n    case SET_RESULT:\n      return action.data;\n    default: \n      return state;\n  }\n}","import { START_FETCHING, LOADING, FINISHED, IN_PROGRESS } from '../constants/actions';\n\nexport default (state = 'initial', action) => {\n  switch(action.type) {\n    case IN_PROGRESS:\n      return 'in_progress';\n    case START_FETCHING:\n      return 'fetching';\n    case LOADING:\n      return 'loading';\n    case FINISHED:\n      return 'finished';\n    default: \n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport tagsReducer from './tags';\nimport choiceItemsReducer from './choiceItems';\nimport resultsReducer from './results';\nimport statusReducer from './status';\n\nconst makeRootReducers = asyncReducers => combineReducers({\n  status: statusReducer,\n  selectedTags: tagsReducer,\n  choiceItems: choiceItemsReducer,\n  results: resultsReducer,\n  ...asyncReducers,\n});\n\nexport default makeRootReducers;","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport makeRootReducer from '../reducers/index';\n\nconst initialState = {\n  // choiceItems: [\n  //   { img: 'birds.jpg', tags: [''] },\n  //   { img: 'cats.jpg', tags: [''] },\n  //   { img: 'coffee.jpg', tags: [''] },\n  //   { img: 'cycling.jpg', tags: [''] }\n  // ],\n  // selectedTags: [],\n  // results: {},\n};\n\n\nexport default ((initState = initialState) => {\n  const middleware = [thunk];\n\n  // const enhancers = [];\n\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const composeWithDevToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    if (typeof composeWithDevToolsExtension === 'function') {\n      composeEnhancers = composeWithDevToolsExtension;\n    }\n  }\n\n  const store = createStore(\n    makeRootReducer(),\n    initState,\n    composeEnhancers(\n      applyMiddleware(...middleware),\n    )\n  );\n  store.asyncReducers = {};\n  return store;\n})();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}